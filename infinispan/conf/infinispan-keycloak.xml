<infinispan
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:infinispan:config:13.0 https://infinispan.org/schemas/infinispan-config-13.0.xsd
                            urn:infinispan:server:13.0 https://infinispan.org/schemas/infinispan-server-13.0.xsd"
        xmlns="urn:infinispan:config:13.0"
        xmlns:server="urn:infinispan:server:13.0">
    <jgroups>
        <stack-file name="jgroups" path="jgroups.xml"/>
    </jgroups>
    <cache-container name="default" statistics="${env.INFINISPAN_CACHE_STATISTICS:false}">
        <!--    <serialization marshaller="org.infinispan.commons.marshall.JavaSerializationMarshaller">...is not for KC -->
        <!--Caused by: java.lang.ClassNotFoundException: org.keycloak.models.sessions.infinispan.changes.SessionEntityWrapper-->
        <serialization marshaller="org.infinispan.jboss.marshalling.commons.GenericJBossMarshaller">
            <!--            <context-initializer>    <class></class>     </context-initializer>-->
            <allow-list>
                <!-- it can´t find the class from KC -->
<!--                <class>org.keycloak.models.sessions.infinispan.changes.SessionEntityWrapper</class>-->
                <class>java.util.UUID</class>
                <regex>org.keycloak.models.sessions.infinispan.*</regex>
            </allow-list>
        </serialization>
        <serialization marshaller="org.infinispan.commons.marshall.JavaSerializationMarshaller">
            <allow-list>
                <!-- it can´t find the class from KC -->
<!--                <class>org.keycloak.models.sessions.infinispan.changes.SessionEntityWrapper</class>-->
                <class>java.util.UUID</class>
                <regex>org.keycloak.models.sessions.infinispan.*</regex>
            </allow-list>
        </serialization>
        <transport cluster="${infinispan.cluster.name:cluster}" stack="${infinispan.cluster.stack:jgroups}"
                   node-name="${infinispan.node.name:}"/>
        <!--        <security>
                    <authorization/>
                </security>-->
        <replicated-cache-configuration name="sessions-cfg" mode="SYNC" start="EAGER"
                                        statistics="${env.INFINISPAN_CACHE_STATISTICS:false}">
            <state-transfer timeout="${infinispan.statetransfer.timeout:600000}"/>
            <!--https://infinispan.org/docs/stable/titles/encoding/encoding.html#marshalled-object-encoding_storage-formats
            Options can be:
            application/x-protostream
            application/x-jboss-marshalling < This is the one used by kc, shown on startup
            application/x-java-serialized-object-->
            <!-- Alternative way:
            <encoding>
                <key media-type="application/x-java-serialized-object"/>
                <value media-type="application/x-java-serialized-object"/>
            </encoding>
            -->
            <encoding media-type="application/x-jboss-marshalling"/>
            <expiration lifespan="900000000000000000"/>
        </replicated-cache-configuration>
        <distributed-cache-configuration name="distributed-cache-cfg">
            <encoding media-type="application/x-jboss-marshalling"/>
            <expiration lifespan="900000000000000000"/>
            <!--Driver fails
            https://medium.com/@hasnat.saeed/install-and-configure-mysql-jdbc-driver-on-jboss-wildfly-e751a3be60d3
            https://infinispan.zulipchat.com/#narrow/stream/118645-infinispan/topic/.E2.9C.94.20mysql.20persistence.20with.20infinispan.2013.2E0
            https://infinispan.org/docs/11.0.x/titles/server/server.html#datasources
            https://infinispan.org/docs/13.0.x/titles/server/server.html#configuring-server-datasources_managed-datasources
            -->
          <!--  <persistence>
                <string-keyed-jdbc-store shared="true" xmlns="urn:infinispan:config:store:jdbc:13.0">
                    <connection-pool
                            connection-url="jdbc:mysql://localhost:3307/${env.MYSQL_DATABASE:infinispan}"
                            driver="com.mysql.cj.jdbc.Driver" password="${env.MYSQL_USER:root}"
                            username="${env.MYSQL_PASSWORD:root}"/>
                    <string-keyed-table drop-on-exit="false"
                                        prefix="ISPN_STRING_TABLE">
                        <id-column name="ID_COLUMN" type="VARCHAR(255)" />
                        <data-column name="DATA_COLUMN" type="VARBINARY(1000)" />
                        <timestamp-column name="TIMESTAMP_COLUMN" type="BIGINT" />
                        <segment-column name="SEGMENT_COLUMN" type="INT" />
                    </string-keyed-table>
                </string-keyed-jdbc-store>
            </persistence>-->
            <state-transfer timeout="${infinispan.statetransfer.timeout:600000}" />
        </distributed-cache-configuration>
        <!--https://infinispan.org/docs/stable/titles/configuring/configuring.html#replicated-caches_clustered-caches-->
        <!-- <replicated-cache name="sessions" configuration="sessions-cfg">
           &lt;!&ndash;  <persistence passivation="true">
                 <file-store preload="true" purge="false" fetch-state="false" path="../mydata/sessions">
                 </file-store>
             </persistence>&ndash;&gt;
         </replicated-cache>
         <replicated-cache name="clientSessions" configuration="sessions-cfg">
           &lt;!&ndash;  <persistence passivation="true">
                 <file-store preload="true" purge="false" fetch-state="false" path="../mydata/clientSessions">
                 </file-store>
             </persistence>&ndash;&gt;
         </replicated-cache>
         <replicated-cache name="authenticationSessions" configuration="sessions-cfg">
           &lt;!&ndash;  <persistence passivation="true">
                 <file-store preload="true" purge="false" fetch-state="false" path="../mydata/authenticationSessions">
                 </file-store>
             </persistence>&ndash;&gt;
         </replicated-cache>-->
        <!--https://infinispan.org/docs/stable/titles/configuring/configuring.html#distributed-caches_clustered-caches-->
        <!--Passivation
        Passivation configures Infinispan to write entries to cache stores when it evicts those entries from memory.
         In this way, passivation ensures that only a single copy of an entry is maintained, either in-memory or in a
         cache store, which prevents unnecessary and potentially expensive writes to persistent storage.-->
        <!--https://infinispan.org/docs/stable/titles/configuring/configuring.html#configuring-jdbc-cache-stores_persistence-->
        <distributed-cache name="sessions" owners="2" configuration="distributed-cache-cfg" >
            <!--Activate this to perform a file based persistence-->
            <!-- <persistence passivation="true">
                 &lt;!&ndash; purge="false" fetch-state="false" see:  https://infinispan.org/docs/stable/titles/configuring/configuring.html#configuring_cache_stores-persistence&ndash;&gt;
                 <file-store preload="true" purge="false" fetch-state="false" path="../mydata/sessions">
                 </file-store>
             </persistence>-->
            <!--
            JDBC Store, based on https://gist.github.com/bsingr/a33bc0336522329d4f163efbf0fafe05
            Properties located at https://docs.jboss.org/infinispan/13.0/configdocs/infinispan-cachestore-jdbc-config-13.0.html
            -->
           <!-- <string-keyed-jdbc-store

                    shared="false"
                    fetch-state="true"
                    read-only="false"
                    purge="false"
                    max-batch-size="1"
                    preload="false">
                    <connection-pool
                        connection-url="jdbc:mysql://localhost:3307/keycloak"
                        driver="com.mysql.jdbc.Driver" password="password"
                        username="keycloak"/>
&lt;!&ndash;                <connection-pool
                        connection-url="jdbc:mysql://localhost:3307/${env.MYSQL_DATABASE:infinispan}"
                        driver="com.mysql.jdbc.Driver" password="${env.MYSQL_USER:root}"
                        username="${env.MYSQL_PASSWORD:root}"/>&ndash;&gt;
                <string-keyed-table drop-on-exit="true" create-on-start="true" prefix="ISPN_SESSIONS">
                    <id-column name="ID_COLUMN" type="VARCHAR(255)" />
                    <data-column name="DATA_COLUMN" type="VARBINARY(1000)"/>
                    <timestamp-column name="TIMESTAMP_COLUMN" type="BIGINT"/>
                </string-keyed-table>
            </string-keyed-jdbc-store>-->
        </distributed-cache>
        <distributed-cache name="clientSessions" owners="2" configuration="distributed-cache-cfg">
            <!-- <persistence passivation="true">
                 <file-store preload="true" purge="false" fetch-state="false" path="../mydata/clientSessions">
                 </file-store>
             </persistence>-->
        </distributed-cache>
        <distributed-cache name="authenticationSessions" owners="2" configuration="distributed-cache-cfg">
            <!--    <persistence passivation="true">
                    <file-store preload="true" purge="false" fetch-state="false" path="../mydata/authenticationSessions">
                    </file-store>
                </persistence>-->
        </distributed-cache>
    </cache-container>

    <server xmlns="urn:infinispan:server:13.0">
        <interfaces>
            <interface name="public">
                <inet-address value="${infinispan.bind.address:0.0.0.0}"/>
            </interface>
        </interfaces>
        <socket-bindings default-interface="public" port-offset="${infinispan.socket.binding.port-offset:0}">
            <socket-binding name="default" port="${infinispan.bind.port:11222}"/>
            <socket-binding name="memcached" port="11221"/>
        </socket-bindings>

        <endpoints socket-binding="default"/>
    </server>
</infinispan>
